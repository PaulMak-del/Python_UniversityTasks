class Num:

    def __init__(self, num):
        self.num = num

    def __str__(self):
        return str(self.num)

    def __add__(self, obj):
        return self.num + obj.num

    def __mul__(self, obj):
        return self.num * obj.num

    def calc(self):
        return self.num

    def get_type(self):
        return "PUSH " + str(self.num) + "\n"


class Add:

    def __init__(self, *argv):
        self.lst = [el for el in argv]

    def __str__(self):
        result = "(" + str(self.lst[0])
        for el in self.lst[1:]:
            result += " + " + str(el)
        result += ")"
        return result

    def __add__(self, obj):
        return self.calc()

    def __mul__(self, obj):
        return self.calc()

    def calc(self):
        result = 0
        for el in self.lst:
            result += el.calc()
        return result

    def get_type(self):
        str = ''
        for el in self.lst:
            str += el.get_type()
        return str + "ADD\n"


class Mul:

    def __init__(self, *argv):
        self.lst = [el for el in argv]
        self.result = 1

    def __str__(self):
        result = "(" + str(self.lst[0])
        for el in self.lst[1:]:
            result += " * " + str(el)
        result += ")"
        return result

    def __add__(self, obj):
        return self.calc()

    def __mul__(self, obj):
        return self.calc()

    def calc(self):
        result = 1
        for el in self.lst:
            result *= el.calc()
        return result

    def get_type(self):
        str = ''
        for el in self.lst:
            str += el.get_type()
        return str + "MULL\n"


class PrintVisitor:

    def visit(self, obj):
        return str(obj)


class CalcVisitor:

    def visit(self, obj):
        return obj.calc()


class StackVisitor:

    def __init__(self):
        self.code = ''

    def visit(self, obj):
        self.code = obj.get_type()


    def get_code(self):
        return self.code


ast = Mul(Add(Num(7), Mul(Num(3), Num(2))), Num(3))
# ast = Mul(Num(7), Add(Num(8), Num(2)))
pv = PrintVisitor()
cv = CalcVisitor()
sv = StackVisitor()
print(pv.visit(ast))
print(cv.visit(ast))
sv.visit(ast)
print(sv.get_code())
